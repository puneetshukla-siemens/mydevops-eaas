metadata:
  name: CHE_Dev
projects:[]
components:
  - id: ms-kubernetes-tools/vscode-kubernetes-tools/latest
    type: chePlugin
  - mountSources: true
    memoryLimit: 512Mi
    type: dockerimage
    alias: python
    image: 'docker.artifactory.int.idevops.de/che/python-run:latest'
  - mountSources: true
    referenceContent: |
      kind: List
      items:
        - apiVersion: extensions/v1beta1
          kind: Deployment
          metadata:
            name: docker-dind
            namespace: che
          spec:
            replicas: 1
            template:
              metadata:
                labels:
                  app: docker-dind
              spec:
                containers:
                  - name: docker
                    image: docker:dind
                    securityContext:
                      runAsUser: 0
                      privileged: true
                    env:
                      - name: DOCKER_TLS_CERTDIR
                        value: ''
                        
                        
                        
                        
    type: kubernetes
    alias: docker
apiVersion: 1.0.0
commands:
  - name: build configurations
    actions:
      - type: exec
        command: >-
          docker login -u puneet.shukla@siemens.com -p xJbqFW41cfPbgyFiUyQ4
          docker.siemens.com && cd /projects &&
          docker pull docker.siemens.com/idevops/mydevops/mydevops-eclipse-che
          && docker run --rm --name=flask_container -v
          /app/deployment_scripts:/deployment_scripts -p  0.0.0.0:5000:5000
          docker.siemens.com/idevops/mydevops/mydevops-eclipse-che && exit 0 
        component: docker
  - name: deploy resource
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/configuration-deployer/deployment_scripts'
        type: exec
        command: >-
          docker cp flask_container:/app/deployment_scripts
          /projects && cd
          /projects/configuration-deployer/deployment_scripts/deployment_scripts
          && docker build -t terraform . && docker run --rm terraform && exit 0
        component: docker
